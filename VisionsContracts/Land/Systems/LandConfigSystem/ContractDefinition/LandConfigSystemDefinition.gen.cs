using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Numerics;
using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Contracts.CQS;
using Nethereum.Contracts;
using System.Threading;

namespace VisionsContracts.Land.Systems.LandConfigSystem.ContractDefinition
{


    public partial class LandConfigSystemDeployment : LandConfigSystemDeploymentBase
    {
        public LandConfigSystemDeployment() : base(BYTECODE) { }
        public LandConfigSystemDeployment(string byteCode) : base(byteCode) { }
    }

    public class LandConfigSystemDeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = "0x60808060405234601557613e9c908161001a8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c806301ffc9a714610294578063056d14121461028f578063119df25f1461028a5780632665e8c0146102855780632ca2fcc1146102805780632e9e29491461027b5780633193c7d2146102765780633205cd8f14610271578063330616ea1461026c578063344f1ba5146102675780633a0cbb0c146102625780633e0925d31461025d57806341ad460f14610258578063443fee011461025357806345ec93541461024e57806347c307a8146102495780634fba711714610244578063500b99301461023f578063676511821461023a5780636f6f9bef146102355780636f6ff3bc1461023057806373e9dab51461022b57806376bdfa8d146102265780637d0d3f4a146102215780637f6c6f4e1461021c5780638c0ae087146102175780638e210c92146102125780639a9019551461020d5780639bc0495514610208578063a02deacf14610203578063a5ba54fa146101fe578063b4e468fe146101f9578063beaab8bb146101f4578063c8feda01146101ef578063cb19739e146101ea578063de957cf4146101e5578063e1af802c146101e0578063e3b2733a146101db578063f39120fb146101d65763f5338540146101d1575f80fd5b611bc5565b611aff565b611adf565b611ac5565b6119f5565b611927565b6118ce565b6117ea565b6116a9565b6115e2565b6115c0565b611595565b6114ce565b611407565b611340565b61125b565b611194565b61115e565b61108e565b610fc8565b610edd565b610cf4565b610c74565b610c16565b610bf4565b610bd5565b610b0e565b610a3b565b6109a0565b610884565b6107b4565b6106ed565b6106c0565b6105d0565b610594565b61050a565b61045d565b610431565b6102ff565b346102ea5760203660031901126102ea5760043563ffffffff60e01b81168091036102ea5760209063b5dee12760e01b81149081156102d9575b506040519015158152f35b6301ffc9a760e01b1490505f6102ce565b5f80fd5b6001600160a01b038116036102ea57565b346102ea5760203660031901126102ea5761035d60043561031f816102ee565b61032f61032a611fa1565b611d04565b61036b61033a6120d1565b916040519384916020830160609190911b6001600160601b031916815260140190565b03601f1981018452836108e2565b6001600160a01b0361037b612f0c565b16913083036103b0576103ae92505f516020613d275f395f51905f52916003905f516020613da75f395f51905f52612fad565b005b90823b156102ea576040516301c85d5760e51b8152925f9284928391859183916103fe915f516020613d275f395f51905f5291906003905f516020613da75f395f51905f52600487016123d7565b03925af180156104225761040e57005b8061041c5f6103ae936108e2565b80610427565b612413565b5f9103126102ea57565b346102ea575f3660031901126102ea57602061044b612130565b6040516001600160a01b039091168152f35b346102ea5760203660031901126102ea576004356001600160401b0381116102ea57366023820112156102ea5760048101356001600160401b0381116102ea5736602460608302840101116102ea5760246103ae9201611d5c565b9060206003198301126102ea576004356001600160401b0381116102ea57826023820112156102ea576004810135926001600160401b0384116102ea5760248460051b830101116102ea576024019190565b346102ea57610518366104b8565b61052361032a611fa1565b5f5b81811061052e57005b610539818385611dda565b359061054661032a611fa1565b61054e6120ec565b9182511561058f57602080840191909152604051600160f81b9181019190915260018082529261058991906105846021836108e2565b61241e565b01610525565b611db6565b346102ea5760203660031901126102ea576004356105b06120ec565b9081511561058f57816105c89160208094015261275f565b604051908152f35b346102ea575f60203660031901126102ea576004356105f061032a611fa1565b6105f86120d1565b604051916020830152602082526106106040836108e2565b6001600160a01b03610620612f0c565b16913083036106555761065292505f516020613e275f395f51905f529184905f516020613e075f395f51905f52612fad565b80f35b90823b156102ea576040516301c85d5760e51b8152925f9284928391859183916106a2915f516020613e275f395f51905f52919085905f516020613e075f395f51905f52600487016123d7565b03925af18015610422576106b4575080f35b6103ae91505f906108e2565b346102ea575f3660031901126102ea5760206106e26106dd6120d1565b612827565b60601c604051908152f35b346102ea5760203660031901126102ea5761035d60043561070d816102ee565b61071861032a611fa1565b61072361033a6120d1565b6001600160a01b03610733612f0c565b1691308303610766576103ae92505f516020613d275f395f51905f52916007905f516020613da75f395f51905f52612fad565b90823b156102ea576040516301c85d5760e51b8152925f9284928391859183916103fe915f516020613d275f395f51905f5291906007905f516020613da75f395f51905f52600487016123d7565b346102ea5760203660031901126102ea576004356107d361032a611fa1565b6107db6120d1565b604051916020830152602082526107f36040836108e2565b6001600160a01b03610803612f0c565b1691308303610836576103ae92505f516020613e275f395f51905f5291600e905f516020613e075f395f51905f52612fad565b90823b156102ea576040516301c85d5760e51b8152925f9284928391859183916103fe915f516020613e275f395f51905f529190600e905f516020613e075f395f51905f52600487016123d7565b346102ea5760403660031901126102ea576103ae6024356004356108a961032a611fa1565b612244565b634e487b7160e01b5f52604160045260245ffd5b604081019081106001600160401b038211176108dd57604052565b6108ae565b601f909101601f19168101906001600160401b038211908210176108dd57604052565b60405190610915610120836108e2565b565b6001600160401b0381116108dd5760051b60200190565b9080601f830112156102ea57813561094581610917565b9261095360405194856108e2565b81845260208085019260051b8201019283116102ea57602001905b82821061097b5750505090565b813581526020918201910161096e565b801515036102ea57565b35906109158261098b565b346102ea5760403660031901126102ea576004356001600160401b0381116102ea576109d090369060040161092e565b602435906109dd8261098b565b6109e861032a611fa1565b5f5b81518110156103ae576109fd8183611e07565b5190610a076120ec565b9182511561058f5782610a35916020600195015260405190610a308261035d8960208301612147565b6124ad565b016109ea565b346102ea5760603660031901126102ea57600435602435610a5b816102ee565b60443590610a688261098b565b610a78610a736120d1565b6128ad565b60601c92610a87841515612bde565b6040516331a9108f60e11b81526004810182905293602090859060249082905afa938415610422576103ae94610ada915f91610adf575b50610ac7612130565b6001600160a01b03908116911614612325565b611e1b565b610b01915060203d602011610b07575b610af981836108e2565b810190612c3e565b5f610abe565b503d610aef565b346102ea5760203660031901126102ea5761035d600435610b2e816102ee565b610b3961032a611fa1565b610b4461033a6120d1565b6001600160a01b03610b54612f0c565b1691308303610b87576103ae92505f516020613d275f395f51905f52916001905f516020613da75f395f51905f52612fad565b90823b156102ea576040516301c85d5760e51b8152925f9284928391859183916103fe915f516020613d275f395f51905f5291906001905f516020613da75f395f51905f52600487016123d7565b346102ea575f3660031901126102ea576020604051601f193601358152f35b346102ea575f3660031901126102ea5760206106e2610c116120d1565b612932565b346102ea5760403660031901126102ea57600435602435610c368161098b565b610c4161032a611fa1565b610c496120ec565b80511561058f57610c6f61035d926103ae94602084015260405193849160208301612147565b612562565b346102ea57610c82366104b8565b610c8d61032a611fa1565b5f5b818110610c9857005b610ca3818385611dda565b3590610cb061032a611fa1565b610cb86120ec565b9182511561058f57602080840191909152604051600160f81b91810191909152600180825292610cee9190610c6f6021836108e2565b01610c8f565b346102ea5760403660031901126102ea57600435602435610d148161098b565b610d1f61032a611fa1565b610d276120ec565b9182511561058f57610d4b91610d5991602085015260405192839160208301612147565b03601f1981018352826108e2565b6001600160a01b03610d69612f0c565b1691308303610dad576103ae925065ffffffffffff610d9860036b033048000808080808090101609d1b613261565b16905f516020613d875f395f51905f52613316565b823b156102ea576040516301c85d5760e51b8152925f928492839185918391610dfc916b033048000808080808090101609d1b91906003905f516020613d875f395f51905f52600487016123d7565b03925af1801561042257610e0c57005b80610e185f80936108e2565b8003126102ea57005b90602080835192838152019201905f5b818110610e3e5750505090565b8251845260209384019390920191600101610e31565b610160610120610eda936020845280516020850152602081015160408501526040810151606085015260608101516080850152610e9a608082015160a086019015159052565b60a081015163ffffffff1660c085015260c081015160e085015260e081015161010085015261010081015182850152015191610140808201520190610e21565b90565b346102ea5760203660031901126102ea57600435610ef9611e9a565b50610f02611e9a565b50610f0b6120ec565b80511561058f57610f2781610fc4936020610fb2940152612cfe565b90610f33939293611e9a565b93602081015190604081015190606081015190610f9c608082015191610f9360a082015160f81c918b60a182015160e01c9160e060a58201519260e560c5840151930151610100820152015260c08d015260a08c019063ffffffff169052565b151560808a0152565b606088015260408701526020860152845261313c565b61012082015260405191829182610e54565b0390f35b346102ea575f60203660031901126102ea5761035d600435610fe9816102ee565b610ff461032a611fa1565b610fff61033a6120d1565b6001600160a01b0361100f612f0c565b16913083036110415761065292505f516020613d275f395f51905f529184905f516020613da75f395f51905f52612fad565b90823b156102ea576040516301c85d5760e51b8152925f9284928391859183916106a2915f516020613d275f395f51905f52919085905f516020613da75f395f51905f52600487016123d7565b346102ea5760203660031901126102ea576004356110ad61032a611fa1565b6110b56120d1565b604051916020830152602082526110cd6040836108e2565b6001600160a01b036110dd612f0c565b1691308303611110576103ae92505f516020613e275f395f51905f52916001905f516020613e075f395f51905f52612fad565b90823b156102ea576040516301c85d5760e51b8152925f9284928391859183916103fe915f516020613e275f395f51905f5291906001905f516020613e075f395f51905f52600487016123d7565b346102ea5760603660031901126102ea576103ae6044356024356004356111848361098b565b61118f61032a611fa1565b612155565b346102ea5760203660031901126102ea5761035d6004356111b4816102ee565b6111bf61032a611fa1565b6111ca61033a6120d1565b6001600160a01b036111da612f0c565b169130830361120d576103ae92505f516020613d275f395f51905f52916008905f516020613da75f395f51905f52612fad565b90823b156102ea576040516301c85d5760e51b8152925f9284928391859183916103fe915f516020613d275f395f51905f5291906008905f516020613da75f395f51905f52600487016123d7565b346102ea5760403660031901126102ea5760043560243561127b8161098b565b61128661032a611fa1565b61128e6120ec565b9182511561058f57610d4b916112b291602085015260405192839160208301612147565b6001600160a01b036112c2612f0c565b16913083036112f1576103ae925065ffffffffffff610d9860026b033048000808080808090101609d1b613261565b823b156102ea576040516301c85d5760e51b8152925f928492839185918391610dfc916b033048000808080808090101609d1b91906002905f516020613d875f395f51905f52600487016123d7565b346102ea5760203660031901126102ea5761035d600435611360816102ee565b61136b61032a611fa1565b61137661033a6120d1565b6001600160a01b03611386612f0c565b16913083036113b9576103ae92505f516020613d275f395f51905f52916009905f516020613da75f395f51905f52612fad565b90823b156102ea576040516301c85d5760e51b8152925f9284928391859183916103fe915f516020613d275f395f51905f5291906009905f516020613da75f395f51905f52600487016123d7565b346102ea5760203660031901126102ea5761035d600435611427816102ee565b61143261032a611fa1565b61143d61033a6120d1565b6001600160a01b0361144d612f0c565b1691308303611480576103ae92505f516020613d275f395f51905f52916006905f516020613da75f395f51905f52612fad565b90823b156102ea576040516301c85d5760e51b8152925f9284928391859183916103fe915f516020613d275f395f51905f5291906006905f516020613da75f395f51905f52600487016123d7565b346102ea5760203660031901126102ea5761035d6004356114ee816102ee565b6114f961032a611fa1565b61150461033a6120d1565b6001600160a01b03611514612f0c565b1691308303611547576103ae92505f516020613d275f395f51905f52916002905f516020613da75f395f51905f52612fad565b90823b156102ea576040516301c85d5760e51b8152925f9284928391859183916103fe915f516020613d275f395f51905f5291906002905f516020613da75f395f51905f52600487016123d7565b346102ea575f3660031901126102ea576115b56115b06120d1565b6129b8565b5060206040515f8152f35b346102ea575f3660031901126102ea5760206105c86115dd6120d1565b612a3c565b346102ea5760203660031901126102ea5761035d600435611602816102ee565b61160d61032a611fa1565b61161861033a6120d1565b6001600160a01b03611628612f0c565b169130830361165b576103ae92505f516020613d275f395f51905f52916005905f516020613da75f395f51905f52612fad565b90823b156102ea576040516301c85d5760e51b8152925f9284928391859183916103fe915f516020613d275f395f51905f5291906005905f516020613da75f395f51905f52600487016123d7565b346102ea5760203660031901126102ea576004356001600160401b0381116102ea57366023820112156102ea578060040135906116e582610917565b906116f360405192836108e2565b8282526024610140602084019402820101903682116102ea57602401925b818410611721576103ae83611ef5565b83360361014081126102ea576101206040519161173d836108c2565b86358352601f1901126102ea5761014091602091611759610905565b611764848901610995565b815261177260408901610995565b8482015261178260608901610995565b604082015261179360808901610995565b60608201526117a460a08901610995565b60808201526117b560c08901610995565b60a082015260e088013560c082015261010088013560e082015261012088013561010082015283820152815201930192611711565b346102ea5760403660031901126102ea5760043560243561180a8161098b565b61181561032a611fa1565b61181d6120ec565b9182511561058f57610d4b9161184191602085015260405192839160208301612147565b6001600160a01b03611851612f0c565b1691308303611880576103ae925065ffffffffffff610d9860046b033048000808080808090101609d1b613261565b823b156102ea576040516301c85d5760e51b8152925f928492839185918391610dfc916b033048000808080808090101609d1b91906004905f516020613d875f395f51905f528287016123d7565b346102ea5760403660031901126102ea576004356024356118ee8161098b565b6118f961032a611fa1565b6119016120ec565b80511561058f5761058461035d926103ae94602084015260405193849160208301612147565b346102ea5760403660031901126102ea576004356001600160401b0381116102ea5761195790369060040161092e565b6024356001600160401b0381116102ea5761197690369060040161092e565b9061198261032a611fa1565b80518251036119be575f5b81518110156103ae57806119b86119a660019385611e07565b516119b18387611e07565b5190612244565b0161198d565b60405162461bcd60e51b815260206004820152600f60248201526e0d8cadccee8d040dad2e6dac2e8c6d608b1b6044820152606490fd5b346102ea5760203660031901126102ea57600435611a1461032a611fa1565b611a1c6120d1565b60405191602083015260208252611a346040836108e2565b6001600160a01b03611a44612f0c565b1691308303611a77576103ae92505f516020613e275f395f51905f5291600d905f516020613e075f395f51905f52612fad565b90823b156102ea576040516301c85d5760e51b8152925f9284928391859183916103fe915f516020613e275f395f51905f529190600d905f516020613e075f395f51905f52600487016123d7565b346102ea575f3660031901126102ea57602061044b612f0c565b346102ea575f3660031901126102ea576115b5611afa6120d1565b612ac2565b346102ea5760203660031901126102ea5761035d600435611b1f816102ee565b611b2a61032a611fa1565b611b3561033a6120d1565b6001600160a01b03611b45612f0c565b1691308303611b78576103ae92505f516020613d275f395f51905f52916004905f516020613da75f395f51905f52612fad565b90823b156102ea576040516301c85d5760e51b8152925f9284928391859183916103fe915f516020613d275f395f51905f5291906004905f516020613da75f395f51905f528287016123d7565b346102ea5760403660031901126102ea57600435602435611be761032a611fa1565b611bef6120d1565b9160405190602082015260208152611c086040826108e2565b6001600160a01b03611c18612f0c565b16308103611c8357506103ae92611c5e919065ffffffffffff611c4960055f516020613e275f395f51905f52613261565b16905f516020613e075f395f51905f52613316565b611c666120d1565b60405191602083015260208252611c7e6040836108e2565b6125f1565b9192823b156102ea576040516301c85d5760e51b8152925f928492839185918391611cd2915f516020613e275f395f51905f5291906005905f516020613e075f395f51905f52600487016123d7565b03925af1801561042257611ceb575b506103ae90611c5e565b80611cf75f80936108e2565b8003126102ea575f611ce1565b15611d0b57565b60405162461bcd60e51b815260206004820152602360248201527f526f6f744163636573734f70657261746f723a204e6f206f776e65722061636360448201526265737360e81b6064820152608490fd5b90611d6861032a611fa1565b5f5b818110611d7657505050565b80611db0611d876001938587611dca565b356020611d95848789611dca565b01356040611da485888a611dca565b01359161118f8361098b565b01611d6a565b634e487b7160e01b5f52603260045260245ffd5b919081101561058f576060020190565b919081101561058f5760051b0190565b80516002101561058f5760600190565b80511561058f5760200190565b805182101561058f5760209160051b010190565b611e256003610917565b90611e3360405192836108e2565b60038252611e416003610917565b6020830190601f190136823782511561058f5733905281516001101561058f5760408201526109159261035d92611e9591906001600160a01b0316611e8584611dea565b5260405193849160208301612147565b61267c565b6040519061014082016001600160401b038111838210176108dd576040526060610120835f81525f60208201525f60408201525f838201525f60808201525f60a08201525f60c08201525f60e08201525f6101008201520152565b90611f0161032a611fa1565b5f5b8251811015611f9c5780611f96611f1c60019386611e07565b5151611f7d6020611f2d8589611e07565b5101518051151590602081015115156040820151151560608301511515611f576080850151151590565b90611f6560a0860151151590565b9260c08601519461010060e088015197015197612de9565b90611f866120ec565b90611f9082611dfa565b52612e5b565b01611f03565b509050565b6040516020810190616e7360f01b82525f60228201525f603082015260208152611fcc6040826108e2565b51905190602081106120c0575b50611fe2612130565b9061200082600160801b600160f01b038316616e7360f01b176131c3565b80156120b0575b15612013575050600190565b608081901b6001600160801b0319169061207090601081901b6001600160901b031916806120a15750612044612f41565b925b806120905750610d4b612057612f41565b6040519485936001600160f01b03191660208501612f77565b61208c60405192839263d787b73760e01b8452600484016123af565b0390fd5b61209c610d4b91613201565b612057565b6120aa90613201565b92612046565b506120bb82826131c3565b612007565b5f199060200360031b1b165f611fd9565b604051906120e06020836108e2565b5f808352366020840137565b604080519091906120fd83826108e2565b6001815291601f1901366020840137565b6040516060919061211f83826108e2565b6002815291601f1901366020840137565b36603319013560601c90811561214257565b339150565b600191151560f81b81520190565b9061215e61210e565b9182511561058f57602083015281516001101561058f5761035d9261219191604084015260405193849160208301612147565b5f916001600160a01b036121a3612f0c565b16923084036121d7576109159350630101000160d81b926f537461636b61626c654974656d000000613a3160f11b01612fad565b5090823b156102ea576040516301c85d5760e51b8152925f92849283918591839161222991630101000160d81b919085906f537461636b61626c654974656d000000613a3160f11b01600487016123d7565b03925af180156104225761223a5750565b5f610915916108e2565b61224c6120ec565b9081511561058f576020820152604051916020830152602082526122716040836108e2565b6001600160a01b03612281612f0c565b16913083036122b65761091592506b033048000808080808090101609d1b916008905f516020613d875f395f51905f52612fad565b90823b156102ea576040516301c85d5760e51b8152925f928492839185918391612306916b033048000808080808090101609d1b91906008905f516020613d875f395f51905f52600487016123d7565b03925af18015610422576123175750565b8061041c5f610915936108e2565b1561232c57565b60405162461bcd60e51b815260206004820152603160248201527f4c69624c616e644163636573733a20596f7520617265206e6f7420746865206f6044820152701ddb995c881bd9881d1a1a5cc81b185b99607a1b6064820152608490fd5b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b906123c760209194939460408452604084019061238b565b6001600160a01b03909416910152565b95949360ff6123fa61240e94608096948a5260a060208b015260a08a0190610e21565b92166040880152868203606088015261238b565b930152565b6040513d5f823e3d90fd5b5f91906001600160a01b03612431612f0c565b1630810361245d575065ffffffffffff610d98610915946b033048000808080808090101609d1b613261565b8093503b156102ea576040516301c85d5760e51b8152925f928492839185918391612229916b033048000808080808090101609d1b919085905f516020613d875f395f51905f52600487016123d7565b906001600160a01b036124be612f0c565b16913083036124ed57610915925065ffffffffffff610d9860056b033048000808080808090101609d1b613261565b823b156102ea576040516301c85d5760e51b8152925f92849283918591839161253c916b033048000808080808090101609d1b91906005905f516020613d875f395f51905f52600487016123d7565b03925af180156104225761254d5750565b806125595f80936108e2565b8003126102ea57565b906001600160a01b03612573612f0c565b16913083036125a257610915925065ffffffffffff610d9860016b033048000808080808090101609d1b613261565b823b156102ea576040516301c85d5760e51b8152925f92849283918591839161253c916b033048000808080808090101609d1b91906001905f516020613d875f395f51905f52600487016123d7565b906001600160a01b03612602612f0c565b169130830361262f57610915925065ffffffffffff611c4960065f516020613e275f395f51905f52613261565b823b156102ea576040516301c85d5760e51b8152925f92849283918591839161253c915f516020613e275f395f51905f5291906006905f516020613e075f395f51905f52600487016123d7565b5f91906001600160a01b0361268f612f0c565b163081036126d2575065ffffffffffff6126b361091594630101000160d81b613261565b16906f4c616e645065726d697373696f6e7300613a3160f11b01613316565b8093503b156102ea576040516301c85d5760e51b8152925f92849283918591839161222991630101000160d81b919085906f4c616e645065726d697373696f6e7300613a3160f11b01600487016123d7565b908160209103126102ea575190565b9061275460609360ff92979695978452608060208501526080840190610e21565b951660408201520152565b6001600160a01b0361276f612f0c565b163081036127a35750610eda90630100080160dd1b905f906b41637469766553746f76657360201b613a3160f11b01612fc9565b604051638c364d5960e01b8152916020918391829081906127e990630100080160dd1b905f906b41637469766553746f76657360201b613a3160f11b0160048601612733565b03915afa908115610422575f916127fe575090565b610eda915060203d602011612820575b61281881836108e2565b810190612724565b503d61280e565b6001600160a01b03612837612f0c565b163081036128695750610eda905f516020613d275f395f51905f52906001905f516020613da75f395f51905f52612fc9565b604051638c364d5960e01b8152916020918391829081906127e9905f516020613d275f395f51905f52906001905f516020613da75f395f51905f5260048601612733565b6001600160a01b036128bd612f0c565b163081036128ef5750610eda905f516020613d275f395f51905f52906004905f516020613da75f395f51905f52612fc9565b604051638c364d5960e01b8152916020918391829081906127e9905f516020613d275f395f51905f52906004905f516020613da75f395f51905f52828601612733565b6001600160a01b03612942612f0c565b163081036129745750610eda905f516020613d275f395f51905f52906008905f516020613da75f395f51905f52612fc9565b604051638c364d5960e01b8152916020918391829081906127e9905f516020613d275f395f51905f52906008905f516020613da75f395f51905f5260048601612733565b6001600160a01b036129c8612f0c565b163081036129f95750610eda905f516020613e275f395f51905f52905f905f516020613e075f395f51905f52612fc9565b604051638c364d5960e01b8152916020918391829081906127e9905f516020613e275f395f51905f52905f905f516020613e075f395f51905f5260048601612733565b6001600160a01b03612a4c612f0c565b16308103612a7e5750610eda905f516020613e275f395f51905f52906001905f516020613e075f395f51905f52612fc9565b604051638c364d5960e01b8152916020918391829081906127e9905f516020613e275f395f51905f52906001905f516020613e075f395f51905f5260048601612733565b6001600160a01b03612ad2612f0c565b16308103612b045750610eda905f516020613d275f395f51905f52906005905f516020613da75f395f51905f52612fc9565b604051638c364d5960e01b8152916020918391829081906127e9905f516020613d275f395f51905f52906005905f516020613da75f395f51905f5260048601612733565b6001600160a01b03612b58612f0c565b16308103612b925750610eda90630101000160d81b905f906f5265736f757263654163636573730000661d189ddbdc9b1960ca1b01612fc9565b604051638c364d5960e01b8152916020918391829081906127e990630101000160d81b905f906f5265736f757263654163636573730000661d189ddbdc9b1960ca1b0160048601612733565b15612be557565b60405162461bcd60e51b815260206004820152602b60248201527f4c69624c616e644163636573733a206c616e644e46547320616464726573732060448201526a063616e6e6f7420626520360ac1b6064820152608490fd5b908160209103126102ea5751610eda816102ee565b6001600160401b0381116108dd57601f01601f191660200190565b81601f820112156102ea57805190612c8582612c53565b92612c9360405194856108e2565b828452602083830101116102ea57815f9260208093018386015e8301015290565b916060838303126102ea5782516001600160401b0381116102ea5782612cdb918501612c6e565b92602081015192604082015160018060401b0381116102ea57610eda9201612c6e565b6001600160a01b03612d0e612f0c565b16308103612d4b5750612d44906b072848090101010008210101609d1b90674c616e64496e666f60401b613a3160f11b01613068565b9192909190565b60405163419b58fd60e01b8152674c616e64496e666f60401b613a3160f11b0160048201526060602482015292915f91849182908190612d8f906064830190610e21565b6b072848090101010008210101609d1b604483015203915afa908115610422575f5f935f93612dbf575b50929190565b91935050612ddf91503d805f833e612dd781836108e2565b810190612cb4565b929092915f612db9565b9796959492612e3192612e3d95926040519a151560f81b60208c0152151560f81b60218b0152151560f81b60228a0152151560f81b60238901526024880190151560f81b9052565b151560f81b6025860152565b60268401526046830152606682015260668152610eda6086826108e2565b6001600160a01b03612e6b612f0c565b16308103612e915750610915916060915f91905f516020613d875f395f51905f526131ac565b91823b156102ea5760405163298314fb60e01b81525f516020613d875f395f51905f52600482015260a06024820152925f92849283918591839161230691612ef391612ee19060a4860190610e21565b8481036003190160448601529061238b565b836064840152600319838203016084840152606061238b565b7f629a4c26e296b22a8e0856e9f6ecb2d1008d7e00081111962cd175fa7488e175546001600160a01b031680610eda57503390565b60405190612f506040836108e2565b60068252651e3937b7ba1f60d11b6020830152565b805191908290602001825e015f815290565b610eda93926003612f9f9260019461ffff60f01b168152601d60f91b60028201520190612f65565b601d60f91b81520190612f65565b91612fc265ffffffffffff9161091596613261565b1691613316565b612fef91612fd99194939461356a565b9260ff808216601b0360031b84901c1692613261565b91806020841015613020575b5080548360031b1b9260200380921161301357505090565b600101549060031b1c1790565b601f84169360051c0190505f612ffb565b634e487b7160e01b5f52601160045260245ffd5b60ff1660ff81146130565760010190565b613031565b9190820180921161305657565b91925f9260609260ff61307f8760f01c8385613598565b9660e01c168061308e57505050565b919450925061309d8385613bac565b549366ffffffffffffff8516936130cc6130b686612c53565b956130c460405197886108e2565b808752612c53565b602086019590601f19013687379491865f935b8560ff8616106130f157505050505050565b613134918161312961312e936131228961310c818b8b6135ca565b9560ff64ffffffffff92166028026038011c1690565b8094613609565b61305b565b93613045565b9287906130df565b9064ffffffffff6131519260381c169061371c565b6040805160206020600160801b0384168201810190925260016001607b1b03600584901c168082529092909160809190911c9083015f5b838110613196575050505090565b6020600181928551855201920192019190613188565b92909161091594926131bd8561376c565b94613865565b6131cb61210e565b9081511561058f57602082015280516001101561058f576001600160a01b0390911660408201526131fb90612b48565b60f81c90565b5f5b60108110613234575b6040516001600160801b031990921660208301526010825261322f6030836108e2565b815290565b6001600160801b03198216600382901b1b6001600160f81b0319161561325c57600101613203565b61320c565b5f915f915b60ff821683106132765750505090565b90919261328c848360ff91601b0360031b1c1690565b810180911161305657926001019190613266565b65ffffffffffff6132bd610eda9593606084526060840190610e21565b93166020820152604081840391015261238b565b6001600160581b03191690565b90613302610eda959365ffffffffffff928452608060208501526080840190610e21565b93166040820152606081840391015261238b565b92939291906001600160f01b03198316611bdd60f21b146135125761333b818461356a565b9361334584613ab2565b90865f5b8351811015613429576133756133706133628387611e07565b516001600160581b03191690565b6132d1565b613385816004809160581c161490565b613393575b50600101613349565b6133ca9192506133be6133b86133ab6133be936132d1565b6001600160601b03191690565b60601c90565b6001600160a01b031690565b90813b156102ea575f868a9387838b6133f96040519889968795869463964f667d60e01b8652600486016132de565b03925af1908115610422578992600192613415575b509061338a565b8061041c5f613423936108e2565b5f61340e565b506134609196865f516020613d475f395f51905f526040518061344e868b8b846132a0565b0390a265ffffffffffff861690613b78565b5f5b81518110156135095761347b6133706133628385611e07565b61348b816008809160581c161490565b613499575b50600101613462565b6133be6133be6133b86133ab6134ae946132d1565b90813b156102ea5760405163a8ba872160e01b8152915f9083908183816134db8e8c8c8f600486016132de565b03925af1918215610422576001926134f5575b5090613490565b8061041c5f613503936108e2565b5f6134ee565b50505050509050565b6135325f516020613d475f395f51905f52939495604051938493846132a0565b0390a2565b60209181520160208251919201905f5b8181106135545750505090565b8251845260209384019390920191600101613547565b90613583610d4b91604051928391602083019586613537565b5190205f516020613d675f395f51905f521890565b91909181156135b357610eda926135ae9161356a565b613b89565b5050506040516135c46020826108e2565b5f815290565b610d4b6135f15f516020613de75f395f51905f529493604051928391602083019586613537565b51902060f89190911b6001600160f81b031916181890565b905b6020811015613634578061361e57505050565b5f199060031b1c90818351169119905416179052565b919060018160209254845201910191601f190161360b565b919080613698575b505b6020811015613680578061366957505050565b5f1960039190911b1c825191548119169116179052565b919060018160209254845201910191601f1901613656565b6020811015613700575b801561365457929183602003908183105f146136f3575f19600384901b1c5b81548660031b1b81865116911916178452818311156136ec57600101920192601f199101015f613654565b5050505050565b5f19600383901b1c6136c1565b916137179061370f8460051c90565b0192601f1690565b6136a2565b805182116137375760200160801b9060018060801b03161790565b6040516323230fa360e01b81526060600482015291829161375c90606484019061238b565b905f602484015260448301520390fd5b655461626c657360501b66746273746f726560c81b0181146137d45760408051655461626c657360501b66746273746f726560c81b0160208201908152818301939093529081526137be6060826108e2565b5190205f516020613d675f395f51905f52185490565b506503001811010160cd1b90565b90610eda94926137fd61380b92608085526080850190610e21565b90838203602085015261238b565b926040820152606081840391015261238b565b9695949061240e9361384460a09694613852938b5260c060208c015260c08b0190610e21565b9089820360408b015261238b565b916060880152868203608088015261238b565b9295949192916001600160f01b03198316611bdd60f21b14613a8f5761388a83613ab2565b5f5b8151811015613937576138a56133706133628385611e07565b6138b5816001809160581c161490565b6138c3575b5060010161388c565b6133be6133be6133b86133ab6138d8946132d1565b90813b156102ea575f878b9387838a6139098a8f6040519a8b98899788966315c19b2760e21b88526004880161381e565b03925af191821561042257600192613923575b50906138ba565b8061041c5f613931936108e2565b5f61391c565b50835f516020613dc75f395f51905f52604051806139588a8d8b8a856137e2565b0390a2613974613968848661356a565b86516020880191613c28565b60e082901c60ff1680613a3b575b505f5b8151811015613a305761399e6133706133628385611e07565b6139ae816002809160581c161490565b6139bc575b50600101613985565b6133be6133be6133b86133ab6139d1946132d1565b90813b156102ea575f878b9387838a613a028a8f6040519a8b9889978896635b28cdaf60e01b88526004880161381e565b03925af191821561042257600192613a1c575b50906139b3565b8061041c5f613a2a936108e2565b5f613a15565b505050505050509050565b88613a468587613bac565b555f602088015b85878c8560ff861610613a64575050505050613982565b8361312960ff95613a7f8861310c81600199613a86996135ca565b8094613c28565b92011690613a4d565b509093945f516020613dc75f395f51905f529361353291604051948594856137e2565b613aba6120ec565b80511561058f57613b6b81610eda936020613b7394015264ffffffffff5f516020613de75f395f51905f526040516020810190613b1581610d4b876953746f7265486f6f6b7360301b66746273746f726560c81b0186613537565b519020604051911892602082019190613b4e908290610d4b906953746f7265486f6f6b7360301b66746273746f726560c81b0186613537565b5190205f516020613e475f395f51905f52185460381c1690613b89565b80519061371c565b613bda565b825161091593602001929091613c6c565b610eda9060405192601f19603f82860101166040528084525f602085019261364c565b90613bc5610d4b91604051928391602083019586613537565b5190205f516020613e475f395f51905f521890565b9060158260801c9260018060801b031604604051926020840160208360051b8601016040528285525f5b838110613c115750505050565b602060016015928551855201920192019190613c04565b91905b6020811015613c545780613c3e57505050565b5f199060031b1c90818354169119905116179055565b909160016020918451815501920190601f1901613c2b565b92919080613cb9575b505b6020811015613ca15780613c8a57505050565b5f1960039190911b1c825491518119169116179055565b909160016020918451815501920190601f1901613c77565b6020811015613d0a575b8015613c755791926020839003905f19600384901b1c198460031b90811c908651901c9080198354169116178155818311156136ec5760010193019101601f19015f613c75565b92613d2190613d198560051c90565b0193601f1690565b613cc356fe00dc0b00141414141414141414141400000000000000000000000000000000008c0b5119d4cec7b284c6b1b39252a03d1e2f2d7451a5895562524c113bb952be86425bff6b57326c7859e89024fe4f238ca327a1ae4a230180dd2f0e88aaa7d9746200000000000000000000000000004974656d496e666f000000000000000074620000000000000000000000000000436f6e666967416464726573736573008dbb3a9672eebfd3773e72dd9c102393436816d832c7ba9e1e1ac8fcadcac7a93b4102da22e32d82fc925482184f16c09fd4281692720b87d124aef6da48a0f17462000000000000000000000000000043616665436f736d6f73436f6e66696701d40f042020202020202020202014202020200000000000000000000000000014e2fcc58e58e68ec7edc30c8d50dccc3ce2714a623ec81f46b6a63922d76569a2646970667358221220b5842ca9eb05cea9bf4ff0588a15144559b3bde1ea2eb889337f15a74b5111b864736f6c634300081c0033";
        public LandConfigSystemDeploymentBase() : base(BYTECODE) { }
        public LandConfigSystemDeploymentBase(string byteCode) : base(byteCode) { }

    }

    public partial class MsgSenderFunction : MsgSenderFunctionBase { }

    [Function("_msgSender", "address")]
    public class MsgSenderFunctionBase : FunctionMessage
    {

    }

    public partial class MsgValueFunction : MsgValueFunctionBase { }

    [Function("_msgValue", "uint256")]
    public class MsgValueFunctionBase : FunctionMessage
    {

    }

    public partial class WorldFunction : WorldFunctionBase { }

    [Function("_world", "address")]
    public class WorldFunctionBase : FunctionMessage
    {

    }

    public partial class ApproveLandOperatorFunction : ApproveLandOperatorFunctionBase { }

    [Function("approveLandOperator")]
    public class ApproveLandOperatorFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "landId", 1)]
        public virtual BigInteger LandId { get; set; }
        [Parameter("address", "operator", 2)]
        public virtual string Operator { get; set; }
        [Parameter("bool", "status", 3)]
        public virtual bool Status { get; set; }
    }

    public partial class GetActiveStovesFunction : GetActiveStovesFunctionBase { }

    [Function("getActiveStoves", "uint256")]
    public class GetActiveStovesFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "stoveId", 1)]
        public virtual BigInteger StoveId { get; set; }
    }

    public partial class GetCookingCostFunction : GetCookingCostFunctionBase { }

    [Function("getCookingCost", "uint256")]
    public class GetCookingCostFunctionBase : FunctionMessage
    {

    }

    public partial class GetLandInfoFunction : GetLandInfoFunctionBase { }

    [Function("getLandInfo", typeof(GetLandInfoOutputDTO))]
    public class GetLandInfoFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "landId", 1)]
        public virtual BigInteger LandId { get; set; }
    }

    public partial class GetLandTablesAndChairsAddressFunction : GetLandTablesAndChairsAddressFunctionBase { }

    [Function("getLandTablesAndChairsAddress", "address")]
    public class GetLandTablesAndChairsAddressFunctionBase : FunctionMessage
    {

    }

    public partial class GetSoftCostPerSquareFunction : GetSoftCostPerSquareFunctionBase { }

    [Function("getSoftCostPerSquare", "uint256")]
    public class GetSoftCostPerSquareFunctionBase : FunctionMessage
    {

    }

    public partial class GetSoftDestinationAddressFunction : GetSoftDestinationAddressFunctionBase { }

    [Function("getSoftDestinationAddress", "address")]
    public class GetSoftDestinationAddressFunctionBase : FunctionMessage
    {

    }

    public partial class GetSoftTokenFunction : GetSoftTokenFunctionBase { }

    [Function("getSoftToken", "address")]
    public class GetSoftTokenFunctionBase : FunctionMessage
    {

    }

    public partial class SetChairFunction : SetChairFunctionBase { }

    [Function("setChair")]
    public class SetChairFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_chair", 1)]
        public virtual BigInteger Chair { get; set; }
        [Parameter("bool", "_isChair", 2)]
        public virtual bool IsChair { get; set; }
    }

    public partial class SetChunkSizeFunction : SetChunkSizeFunctionBase { }

    [Function("setChunkSize")]
    public class SetChunkSizeFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "chunkSize", 1)]
        public virtual BigInteger ChunkSize { get; set; }
    }

    public partial class SetCookingCostFunction : SetCookingCostFunctionBase { }

    [Function("setCookingCost")]
    public class SetCookingCostFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "cookingCost_", 1)]
        public virtual BigInteger Cookingcost { get; set; }
    }

    public partial class SetIsStackableFunction : SetIsStackableFunctionBase { }

    [Function("setIsStackable")]
    public class SetIsStackableFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_base", 1)]
        public virtual BigInteger Base { get; set; }
        [Parameter("uint256", "_input", 2)]
        public virtual BigInteger Input { get; set; }
        [Parameter("bool", "_isStackable", 3)]
        public virtual bool IsStackable { get; set; }
    }

    public partial class SetItemConfigAddressFunction : SetItemConfigAddressFunctionBase { }

    [Function("setItemConfigAddress")]
    public class SetItemConfigAddressFunctionBase : FunctionMessage
    {
        [Parameter("address", "itemConfigAddress_", 1)]
        public virtual string Itemconfigaddress { get; set; }
    }

    public partial class SetItemsFunction : SetItemsFunctionBase { }

    [Function("setItems")]
    public class SetItemsFunctionBase : FunctionMessage
    {
        [Parameter("address", "items", 1)]
        public virtual string Items { get; set; }
    }

    public partial class SetItems1Function : SetItems1FunctionBase { }

    [Function("setItems")]
    public class SetItems1FunctionBase : FunctionMessage
    {
        [Parameter("tuple[]", "items", 1)]
        public virtual List<ItemInfoDTO> Items { get; set; }
    }

    public partial class SetLandNFTsFunction : SetLandNFTsFunctionBase { }

    [Function("setLandNFTs")]
    public class SetLandNFTsFunctionBase : FunctionMessage
    {
        [Parameter("address", "landNFTs_", 1)]
        public virtual string Landnfts { get; set; }
    }

    public partial class SetLandQuestTaskProgressUpdateAddressFunction : SetLandQuestTaskProgressUpdateAddressFunctionBase { }

    [Function("setLandQuestTaskProgressUpdateAddress")]
    public class SetLandQuestTaskProgressUpdateAddressFunctionBase : FunctionMessage
    {
        [Parameter("address", "landQuestTaskProgressUpdateAddress_", 1)]
        public virtual string Landquesttaskprogressupdateaddress { get; set; }
    }

    public partial class SetLandTablesAndChairsAddressFunction : SetLandTablesAndChairsAddressFunctionBase { }

    [Function("setLandTablesAndChairsAddress")]
    public class SetLandTablesAndChairsAddressFunctionBase : FunctionMessage
    {
        [Parameter("address", "landTablesAndChairsAddress_", 1)]
        public virtual string Landtablesandchairsaddress { get; set; }
    }

    public partial class SetLandTransformAddressFunction : SetLandTransformAddressFunctionBase { }

    [Function("setLandTransformAddress")]
    public class SetLandTransformAddressFunctionBase : FunctionMessage
    {
        [Parameter("address", "landTransformAddress_", 1)]
        public virtual string Landtransformaddress { get; set; }
    }

    public partial class SetMaxLevelFunction : SetMaxLevelFunctionBase { }

    [Function("setMaxLevel")]
    public class SetMaxLevelFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "maxLevel_", 1)]
        public virtual BigInteger Maxlevel { get; set; }
    }

    public partial class SetMinStartingLimitsFunction : SetMinStartingLimitsFunctionBase { }

    [Function("setMinStartingLimits")]
    public class SetMinStartingLimitsFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "minStartingX", 1)]
        public virtual BigInteger MinStartingX { get; set; }
        [Parameter("uint256", "minStartingY", 2)]
        public virtual BigInteger MinStartingY { get; set; }
    }

    public partial class SetNonPlaceableFunction : SetNonPlaceableFunctionBase { }

    [Function("setNonPlaceable")]
    public class SetNonPlaceableFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_nonPlaceable", 1)]
        public virtual BigInteger NonPlaceable { get; set; }
        [Parameter("bool", "_placeable", 2)]
        public virtual bool Placeable { get; set; }
    }

    public partial class SetNonPlaceableItemsFunction : SetNonPlaceableItemsFunctionBase { }

    [Function("setNonPlaceableItems")]
    public class SetNonPlaceableItemsFunctionBase : FunctionMessage
    {
        [Parameter("uint256[]", "items", 1)]
        public virtual List<BigInteger> Items { get; set; }
    }

    public partial class SetNonRemovableFunction : SetNonRemovableFunctionBase { }

    [Function("setNonRemovable")]
    public class SetNonRemovableFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_nonRemovables", 1)]
        public virtual BigInteger NonRemovables { get; set; }
        [Parameter("bool", "_removable", 2)]
        public virtual bool Removable { get; set; }
    }

    public partial class SetNonRemovableItemsFunction : SetNonRemovableItemsFunctionBase { }

    [Function("setNonRemovableItems")]
    public class SetNonRemovableItemsFunctionBase : FunctionMessage
    {
        [Parameter("uint256[]", "items", 1)]
        public virtual List<BigInteger> Items { get; set; }
    }

    public partial class SetRedistributorFunction : SetRedistributorFunctionBase { }

    [Function("setRedistributor")]
    public class SetRedistributorFunctionBase : FunctionMessage
    {
        [Parameter("address", "_redistributor", 1)]
        public virtual string Redistributor { get; set; }
    }

    public partial class SetReturnItemsFunction : SetReturnItemsFunctionBase { }

    [Function("setReturnItems")]
    public class SetReturnItemsFunctionBase : FunctionMessage
    {
        [Parameter("uint256[]", "items", 1)]
        public virtual List<BigInteger> Items { get; set; }
        [Parameter("uint256[]", "itemsReturned", 2)]
        public virtual List<BigInteger> ItemsReturned { get; set; }
    }

    public partial class SetReturnsItemFunction : SetReturnsItemFunctionBase { }

    [Function("setReturnsItem")]
    public class SetReturnsItemFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_itemId", 1)]
        public virtual BigInteger ItemId { get; set; }
        [Parameter("uint256", "_itemReturned", 2)]
        public virtual BigInteger ItemReturned { get; set; }
    }

    public partial class SetRotatableFunction : SetRotatableFunctionBase { }

    [Function("setRotatable")]
    public class SetRotatableFunctionBase : FunctionMessage
    {
        [Parameter("uint256[]", "_itemIds", 1)]
        public virtual List<BigInteger> ItemIds { get; set; }
        [Parameter("bool", "_isRotatable", 2)]
        public virtual bool IsRotatable { get; set; }
    }

    public partial class SetSoftCostPerSquareFunction : SetSoftCostPerSquareFunctionBase { }

    [Function("setSoftCostPerSquare")]
    public class SetSoftCostPerSquareFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "softCost_", 1)]
        public virtual BigInteger Softcost { get; set; }
    }

    public partial class SetSoftDestinationFunction : SetSoftDestinationFunctionBase { }

    [Function("setSoftDestination")]
    public class SetSoftDestinationFunctionBase : FunctionMessage
    {
        [Parameter("address", "softDestination_", 1)]
        public virtual string Softdestination { get; set; }
    }

    public partial class SetSoftTokenFunction : SetSoftTokenFunctionBase { }

    [Function("setSoftToken")]
    public class SetSoftTokenFunctionBase : FunctionMessage
    {
        [Parameter("address", "softToken_", 1)]
        public virtual string Softtoken { get; set; }
    }

    public partial class SetStackableItemsFunction : SetStackableItemsFunctionBase { }

    [Function("setStackableItems")]
    public class SetStackableItemsFunctionBase : FunctionMessage
    {
        [Parameter("tuple[]", "stackableItems", 1)]
        public virtual List<StackableItemDTO> StackableItems { get; set; }
    }

    public partial class SetTableFunction : SetTableFunctionBase { }

    [Function("setTable")]
    public class SetTableFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_table", 1)]
        public virtual BigInteger Table { get; set; }
        [Parameter("bool", "_isTable", 2)]
        public virtual bool IsTable { get; set; }
    }

    public partial class SetToolFunction : SetToolFunctionBase { }

    [Function("setTool")]
    public class SetToolFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_tool", 1)]
        public virtual BigInteger Tool { get; set; }
        [Parameter("bool", "_isTool", 2)]
        public virtual bool IsTool { get; set; }
    }

    public partial class SetVestingFunction : SetVestingFunctionBase { }

    [Function("setVesting")]
    public class SetVestingFunctionBase : FunctionMessage
    {
        [Parameter("address", "vesting_", 1)]
        public virtual string Vesting { get; set; }
    }

    public partial class SupportsInterfaceFunction : SupportsInterfaceFunctionBase { }

    [Function("supportsInterface", "bool")]
    public class SupportsInterfaceFunctionBase : FunctionMessage
    {
        [Parameter("bytes4", "interfaceId", 1)]
        public virtual byte[] InterfaceId { get; set; }
    }

    public partial class StoreSetrecordEventDTO : StoreSetrecordEventDTOBase { }

    [Event("Store_SetRecord")]
    public class StoreSetrecordEventDTOBase : IEventDTO
    {
        [Parameter("bytes32", "tableId", 1, true )]
        public virtual byte[] TableId { get; set; }
        [Parameter("bytes32[]", "keyTuple", 2, false )]
        public virtual List<byte[]> KeyTuple { get; set; }
        [Parameter("bytes", "staticData", 3, false )]
        public virtual byte[] StaticData { get; set; }
        [Parameter("bytes32", "encodedLengths", 4, false )]
        public virtual byte[] EncodedLengths { get; set; }
        [Parameter("bytes", "dynamicData", 5, false )]
        public virtual byte[] DynamicData { get; set; }
    }

    public partial class StoreSplicestaticdataEventDTO : StoreSplicestaticdataEventDTOBase { }

    [Event("Store_SpliceStaticData")]
    public class StoreSplicestaticdataEventDTOBase : IEventDTO
    {
        [Parameter("bytes32", "tableId", 1, true )]
        public virtual byte[] TableId { get; set; }
        [Parameter("bytes32[]", "keyTuple", 2, false )]
        public virtual List<byte[]> KeyTuple { get; set; }
        [Parameter("uint48", "start", 3, false )]
        public virtual ulong Start { get; set; }
        [Parameter("bytes", "data", 4, false )]
        public virtual byte[] Data { get; set; }
    }

    public partial class SliceOutofboundsError : SliceOutofboundsErrorBase { }

    [Error("Slice_OutOfBounds")]
    public class SliceOutofboundsErrorBase : IErrorDTO
    {
        [Parameter("bytes", "data", 1)]
        public virtual byte[] Data { get; set; }
        [Parameter("uint256", "start", 2)]
        public virtual BigInteger Start { get; set; }
        [Parameter("uint256", "end", 3)]
        public virtual BigInteger End { get; set; }
    }

    public partial class WorldAccessdeniedError : WorldAccessdeniedErrorBase { }

    [Error("World_AccessDenied")]
    public class WorldAccessdeniedErrorBase : IErrorDTO
    {
        [Parameter("string", "resource", 1)]
        public virtual string Resource { get; set; }
        [Parameter("address", "caller", 2)]
        public virtual string Caller { get; set; }
    }

    public partial class MsgSenderOutputDTO : MsgSenderOutputDTOBase { }

    [FunctionOutput]
    public class MsgSenderOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "sender", 1)]
        public virtual string Sender { get; set; }
    }

    public partial class MsgValueOutputDTO : MsgValueOutputDTOBase { }

    [FunctionOutput]
    public class MsgValueOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "value", 1)]
        public virtual BigInteger Value { get; set; }
    }

    public partial class WorldOutputDTO : WorldOutputDTOBase { }

    [FunctionOutput]
    public class WorldOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }



    public partial class GetActiveStovesOutputDTO : GetActiveStovesOutputDTOBase { }

    [FunctionOutput]
    public class GetActiveStovesOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetCookingCostOutputDTO : GetCookingCostOutputDTOBase { }

    [FunctionOutput]
    public class GetCookingCostOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetLandInfoOutputDTO : GetLandInfoOutputDTOBase { }

    [FunctionOutput]
    public class GetLandInfoOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("tuple", "landInfo", 1)]
        public virtual LandInfoData LandInfo { get; set; }
    }

    public partial class GetLandTablesAndChairsAddressOutputDTO : GetLandTablesAndChairsAddressOutputDTOBase { }

    [FunctionOutput]
    public class GetLandTablesAndChairsAddressOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class GetSoftCostPerSquareOutputDTO : GetSoftCostPerSquareOutputDTOBase { }

    [FunctionOutput]
    public class GetSoftCostPerSquareOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetSoftDestinationAddressOutputDTO : GetSoftDestinationAddressOutputDTOBase { }

    [FunctionOutput]
    public class GetSoftDestinationAddressOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class GetSoftTokenOutputDTO : GetSoftTokenOutputDTOBase { }

    [FunctionOutput]
    public class GetSoftTokenOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

























































    public partial class SupportsInterfaceOutputDTO : SupportsInterfaceOutputDTOBase { }

    [FunctionOutput]
    public class SupportsInterfaceOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }
}
